<!doctype html>
<html class="no-js" lang="en">

<head>

	<meta charset="utf-8">
	
	<title>RegEx Riddles | @ViewBag.Title</title>
	<meta name="description" content="">
	<meta name="author" content="">

	<link rel="stylesheet" href="@Url.Content("~/css/boilerplate.css")">
	<link rel="stylesheet" href="@Url.Content("~/css/riddles.css")">
	<script src="@Url.Content("~/js/modernizr-1.7.min.js")"></script>

</head>

<body>

	<header>

		<nav class="box top-box layout-container">
			<ul>
				<li><a href="@Url.Action("Index", "Riddle")">Play</a></li>
				<li><a href="#">Create</a></li>
			</ul>
		</nav>

		<h1 class="layout-container">Regex Riddles</h1>

	</header>

	<div id="content" class="box layout-container">
		@RenderBody()
	</div>

	<footer class="box layout-container">
		<p>Hand-crafted by <a href="#">@@scichelli</a> and <a href="#">@@timgthomas</a>.</p>
	</footer>

	<script src="@Url.Content("~/js/yepnope.1.0.1-min.js")"></script>
	<script>

		yepnope([{
			load: [
				'http://code.jquery.com/jquery-1.5.2.min.js'
			],
			complete: function () {
				$(function () {
					$('.btn.submit').bind('click', function () {
						$(this).closest('form').trigger('submit');
					});

					$('form').submit(function () {
						var form = $(this);

						$.ajax({
							url: form.attr('action'),
							type: form.attr('method'),
							data: form.serialize(),
							success: function (data) {
								var container = form.parents('.riddle-container');

								$('.clueResult', container).removeClass('result-success').removeClass('result-failure');

								var failures = data.FailedResults;
								var successes = data.SucceededResults;

								var successesCount = successes.length;
								var totalCount = successesCount + failures.length;

								for (var failureIndex in failures) {
									$('#' + failures[failureIndex]).addClass('result-failure');
								}

								for (var successIndex in successes) {
									$('#' + successes[successIndex]).addClass('result-success');
								}

								$('.priorPatterns', container).trigger('regexRiddles:addPriorPattern', [$('#pattern').val(), successesCount, totalCount]);
							}
						});

						return false;
					});

					$('.priorPatterns').bind('regexRiddles:addPriorPattern', function (ev, pattern, successes, total) {
						$('<li>' + pattern + ' (' + successes + ' of ' + total + ')</li>').prependTo($(this));
					});

					$('#pattern').focus();
				});
			}
		}]);

	</script>

</body>

</html>